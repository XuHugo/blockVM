use crate::{ConfigureInstanceRef, Consensus, Db, GenesisBlock, P2PNetwork, SSL};use serde;use serde::{Deserialize, Serialize};use serde_derive;use std::ops::Deref;#[derive(Debug, Deserialize, Clone)]pub struct Configure {    pub network_id: u64,    pub chain_id: String,    pub chain_hub: String,    pub ssl_enable: bool,    pub address: String,    pub node_private_key: String,    pub key_version: u64,    pub p2p_network: P2PNetwork,    pub ssl: SSL,    pub db: Db,    pub genesis_block: GenesisBlock,    pub consensus: Consensus,    pub ledger_close_interval: u64,}impl Default for Configure {    fn default() -> Self {        Self {            ..Default::default()        }    }}